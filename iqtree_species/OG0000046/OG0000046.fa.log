IQ-TREE multicore version 2.2.0.5 COVID-edition for Linux 64-bit built Sep 26 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    petrichor-dm (AVX2, FMA3, 503 GB RAM)
Command: iqtree2 -s alignments_species_muscle5_edited_trimmed/OG0000046.fa -B 1000 -mset Blosum62,cpREV,Dayhoff,DCMut,FLAVI,FLU,HIVb,HIVw,JTT,JTTDCMut,LG,mtART,mtMAM,mtREV,mtZOA,mtMet,mtVer,mtInv,PMB,Q.bird,Q.insect,Q.mammal,Q.pfam,Q.plant,Q.yeast,rtREV,VT,WAG,Q.iridoviridae,Q.mcv -T 4 -pre iqtree_species/OG0000046.fa
Seed:    617732 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Thu Apr  3 12:58:29 2025
Kernel:  AVX+FMA - 4 threads (32 CPU cores detected)

Reading alignment file alignments_species_muscle5_edited_trimmed/OG0000046.fa ... Fasta format detected
Reading fasta file: done in 0.000686169 secs
Alignment most likely contains protein sequences
Constructing alignment: done in 0.000335932 secs
Alignment has 58 sequences with 339 columns, 66 distinct patterns
39 parsimony-informative, 4 singleton sites, 296 constant sites
                                           Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 7.08103e-05 secs
   1  MK098187_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
   2  MW883593_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
   3  ON743042_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
   4  OR670976_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
   5  MW883599_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
   6  GQ273492_Megalocytivirus_pagrus1_TRBIV       0.00%    passed    100.00%
   7  MW883597_Megalocytivirus_pagrus1_ISKNV       0.88%    passed    100.00%
   8  MW883594_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
   9  OK042108_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  10  MW883595_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  11  ON075463_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  12  MW883602_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  13  MW883606_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  14  KT804738_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  15  AB104413_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  16  BD143114_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  17  MT926123_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  18  MN432490_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  19  23043610005_Megalocytivirus_pagrus1_ISKNV    0.59%    passed    100.00%
  20  NC_003494_Megalocytivirus_pagrus1_ISKNV      0.59%    passed    100.00%
  21  AP017456_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  22  MW883601_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  23  OQ513807_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  24  MK098186_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  25  MK098185_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  26  OQ475017_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  27  OK042109_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  28  OR356116_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  29  MW139932_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  30  MW883600_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  31  AY894343_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  32  MW883596_Megalocytivirus_pagrus1_ISKNV       0.88%    passed    100.00%
  33  KC244182_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  34  MT128666_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  35  OL774654_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  36  MK689685_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  37  MW883598_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  38  MT986830_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  39  OL774653_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  40  MT798582_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  41  PP151097_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  42  OR536350_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  43  KT781098_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  44  ON212400_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  45  MK689686_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  46  MW273353_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  47  MT128667_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  48  OP896201_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  49  ON740976_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
  50  MG570132_Megalocytivirus_pagrus1_TRBIV       0.00%    passed    100.00%
  51  23043610003_Megalocytivirus_pagrus1_ISKNV    0.59%    passed    100.00%
  52  PP974677_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  53  MG570131_Megalocytivirus_pagrus1_TRBIV       0.00%    passed    100.00%
  54  MW883603_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  55  AF371960_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  56  OP009387_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  57  MW273354_Megalocytivirus_pagrus1_ISKNV       0.59%    passed    100.00%
  58  OL774655_Megalocytivirus_pagrus1_RSIV        0.00%    passed    100.00%
****  TOTAL                                        0.35%  0 sequences failed composition chi2 test (p-value<5%; df=19)
NOTE: OK042108_Megalocytivirus_pagrus1_RSIV is identical to MK098187_Megalocytivirus_pagrus1_RSIV but kept for subsequent analysis
NOTE: OR670976_Megalocytivirus_pagrus1_ISKNV is identical to MW883593_Megalocytivirus_pagrus1_ISKNV but kept for subsequent analysis
NOTE: ON075463_Megalocytivirus_pagrus1_RSIV is identical to ON743042_Megalocytivirus_pagrus1_RSIV but kept for subsequent analysis
NOTE: MW883596_Megalocytivirus_pagrus1_ISKNV is identical to MW883597_Megalocytivirus_pagrus1_ISKNV but kept for subsequent analysis
NOTE: MW273354_Megalocytivirus_pagrus1_ISKNV is identical to MW883602_Megalocytivirus_pagrus1_ISKNV but kept for subsequent analysis
NOTE: OP009387_Megalocytivirus_pagrus1_ISKNV is identical to MN432490_Megalocytivirus_pagrus1_ISKNV but kept for subsequent analysis
NOTE: PP151097_Megalocytivirus_pagrus1_ISKNV is identical to MT986830_Megalocytivirus_pagrus1_ISKNV but kept for subsequent analysis
NOTE: MG570131_Megalocytivirus_pagrus1_TRBIV is identical to MG570132_Megalocytivirus_pagrus1_TRBIV but kept for subsequent analysis
Checking for duplicate sequences: done in 0.000163078 secs
Identifying sites to remove: done in 0.000113964 secs
NOTE: 35 identical sequences (see below) will be ignored for subsequent analysis
NOTE: AB104413_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: BD143114_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: MK098186_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: MK098185_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: MW139932_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: OL774654_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: OL774653_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: OL774655_Megalocytivirus_pagrus1_RSIV (identical to MK098187_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: MW883599_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MW883594_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MW883606_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MT926123_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: 23043610005_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: NC_003494_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MW883601_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: OQ513807_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: OR356116_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MW883600_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MT128666_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MK689685_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: OR536350_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: KT781098_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: ON212400_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MW273353_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: MT128667_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: OP896201_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: 23043610003_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: AF371960_Megalocytivirus_pagrus1_ISKNV (identical to MW883593_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
NOTE: KT804738_Megalocytivirus_pagrus1_RSIV (identical to ON743042_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: AP017456_Megalocytivirus_pagrus1_RSIV (identical to ON743042_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: AY894343_Megalocytivirus_pagrus1_RSIV (identical to ON743042_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: MW883598_Megalocytivirus_pagrus1_RSIV (identical to ON743042_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: MT798582_Megalocytivirus_pagrus1_RSIV (identical to ON743042_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: MK689686_Megalocytivirus_pagrus1_RSIV (identical to ON743042_Megalocytivirus_pagrus1_RSIV) is ignored but added at the end
NOTE: PP974677_Megalocytivirus_pagrus1_ISKNV (identical to MT986830_Megalocytivirus_pagrus1_ISKNV) is ignored but added at the end
Alignment was printed to iqtree_species/OG0000046.fa.uniqueseq.phy

For your convenience alignment with unique sequences printed to iqtree_species/OG0000046.fa.uniqueseq.phy


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.001 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using LG+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 0.0245299 secs using 283.6% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -1391.540
Optimal log-likelihood: -1391.540
Proportion of invariable sites: 0.436
Gamma shape alpha: 1.813
Parameters optimization took 1 rounds (0.011 sec)
Time for fast ML tree search: 0.052 seconds

NOTE: ModelFinder requires 3 MB RAM!
ModelFinder will test up to 1320 protein models (sample size: 339) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  Blosum62      1397.732     43  2881.465     2894.292     3045.983
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  Blosum62+I    1395.219     44  2878.438     2891.908     3046.782
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  Blosum62+G4   1394.915     44  2877.830     2891.299     3046.174
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  Blosum62+I+G4 1394.946     45  2879.893     2894.022     3052.063
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  5  Blosum62+R2   1395.856     45  2881.712     2895.842     3053.882
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  Blosum62+R3   1395.017     47  2884.035     2899.540     3063.857
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  Blosum62+I+R2 1395.047     46  2882.093     2896.901     3058.089
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  Blosum62+I+R3 1394.972     48  2885.945     2902.165     3069.593
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 23  Blosum62+F    1365.838     62  2855.675     2883.979     3092.887
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 24  Blosum62+F+I  1363.403     63  2852.807     2882.130     3093.845
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 25  Blosum62+F+G4 1363.087     63  2852.174     2881.498     3093.212
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 26  Blosum62+F+I+G4 1363.125     64  2854.250     2884.615     3099.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  Blosum62+F+R2 1363.990     64  2855.980     2886.345     3100.844
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 45  cpREV         1409.349     43  2904.698     2917.525     3069.216
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  cpREV+I       1406.765     44  2901.529     2914.999     3069.873
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  cpREV+G4      1406.448     44  2900.896     2914.366     3069.240
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  cpREV+I+G4    1406.469     45  2902.937     2917.067     3075.107
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 49  cpREV+R2      1407.436     45  2904.872     2919.002     3077.042
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  cpREV+F       1359.302     62  2842.604     2870.908     3079.816
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  cpREV+F+I     1356.656     63  2839.311     2868.635     3080.349
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 69  cpREV+F+G4    1356.316     63  2838.632     2867.955     3079.670
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  cpREV+F+I+G4  1356.327     64  2840.655     2871.020     3085.519
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  cpREV+F+R2    1357.350     64  2842.700     2873.065     3087.564
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 89  Dayhoff       1390.355     43  2866.711     2879.538     3031.229
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 90  Dayhoff+I     1388.005     44  2864.009     2877.479     3032.353
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 91  Dayhoff+G4    1387.665     44  2863.329     2876.798     3031.673
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 92  Dayhoff+I+G4  1387.719     45  2865.438     2879.568     3037.608
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 93  Dayhoff+R2    1388.522     45  2867.043     2881.173     3039.213
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
111  Dayhoff+F     1350.847     62  2825.695     2853.999     3062.907
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
112  Dayhoff+F+I   1348.606     63  2823.212     2852.536     3064.250
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
113  Dayhoff+F+G4  1348.232     63  2822.463     2851.787     3063.502
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
114  Dayhoff+F+I+G4 1348.297     64  2824.594     2854.959     3069.458
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
115  Dayhoff+F+R2  1349.050     64  2826.101     2856.466     3070.965
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
133  DCMut         1390.443     43  2866.885     2879.712     3031.403
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
134  DCMut+I       1388.092     44  2864.184     2877.654     3032.528
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
135  DCMut+G4      1387.753     44  2863.505     2876.975     3031.849
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
136  DCMut+I+G4    1387.807     45  2865.615     2879.744     3037.785
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
137  DCMut+R2      1388.609     45  2867.219     2881.348     3039.389
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
155  DCMut+F       1350.931     62  2825.862     2854.166     3063.074
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
156  DCMut+F+I     1348.689     63  2823.378     2852.701     3064.416
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
157  DCMut+F+G4    1348.315     63  2822.631     2851.954     3063.669
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
158  DCMut+F+I+G4  1348.381     64  2824.761     2855.126     3069.625
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
159  DCMut+F+R2    1349.134     64  2826.268     2856.633     3071.132
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
177  FLAVI         1403.684     43  2893.369     2906.196     3057.887
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
178  FLAVI+I       1399.793     44  2887.585     2901.055     3055.929
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
179  FLAVI+G4      1399.556     44  2887.112     2900.581     3055.456
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
180  FLAVI+I+G4    1399.510     45  2889.021     2903.150     3061.191
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
181  FLAVI+R2      1401.149     45  2892.298     2906.428     3064.468
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
199  FLAVI+F       1356.074     62  2836.148     2864.452     3073.360
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
200  FLAVI+F+I     1352.012     63  2830.024     2859.347     3071.062
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
201  FLAVI+F+G4    1351.745     63  2829.490     2858.813     3070.528
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
202  FLAVI+F+I+G4  1351.671     64  2831.342     2861.707     3076.206
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
203  FLAVI+F+R2    1353.473     64  2834.946     2865.311     3079.810
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
221  FLU           1403.901     43  2893.803     2906.630     3058.321
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
222  FLU+I         1400.635     44  2889.269     2902.739     3057.613
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
223  FLU+G4        1400.407     44  2888.814     2902.284     3057.158
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
224  FLU+I+G4      1400.395     45  2890.789     2904.919     3062.959
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
225  FLU+R2        1401.661     45  2893.321     2907.451     3065.491
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
243  FLU+F         1352.305     62  2828.611     2856.915     3065.823
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
244  FLU+F+I       1349.001     63  2824.002     2853.326     3065.040
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
245  FLU+F+G4      1348.715     63  2823.429     2852.753     3064.467
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
246  FLU+F+I+G4    1348.685     64  2825.370     2855.735     3070.234
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
247  FLU+F+R2      1350.031     64  2828.061     2858.426     3072.925
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
265  HIVb          1405.031     43  2896.062     2908.889     3060.580
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
266  HIVb+I        1401.028     44  2890.055     2903.524     3058.399
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
267  HIVb+G4       1400.883     44  2889.766     2903.235     3058.110
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
268  HIVb+I+G4     1400.846     45  2891.691     2905.821     3063.861
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
269  HIVb+R2       1402.541     45  2895.082     2909.212     3067.252
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
287  HIVb+F        1359.158     62  2842.316     2870.621     3079.528
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
288  HIVb+F+I      1354.686     63  2835.373     2864.697     3076.411
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
289  HIVb+F+G4     1354.529     63  2835.059     2864.382     3076.097
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
290  HIVb+F+I+G4   1354.460     64  2836.919     2867.284     3081.783
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
291  HIVb+F+R2     1356.498     64  2840.996     2871.361     3085.860
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
309  HIVw          1433.073     43  2952.146     2964.974     3116.664
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
310  HIVw+I        1429.674     44  2947.348     2960.818     3115.692
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
311  HIVw+G4       1429.479     44  2946.958     2960.428     3115.302
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
312  HIVw+I+G4     1429.468     45  2948.935     2963.065     3121.105
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
313  HIVw+R2       1430.756     45  2951.513     2965.642     3123.683
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
331  HIVw+F        1358.306     62  2840.611     2868.916     3077.823
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
332  HIVw+F+I      1354.456     63  2834.912     2864.236     3075.950
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
333  HIVw+F+G4     1354.233     63  2834.466     2863.790     3075.504
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
334  HIVw+F+I+G4   1354.182     64  2836.364     2866.729     3081.228
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
335  HIVw+F+R2     1355.823     64  2839.647     2870.012     3084.511
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
353  JTT           1380.028     43  2846.057     2858.884     3010.575
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
354  JTT+I         1377.574     44  2843.148     2856.618     3011.492
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
355  JTT+G4        1377.294     44  2842.587     2856.056     3010.931
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
356  JTT+I+G4      1377.329     45  2844.658     2858.788     3016.828
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
357  JTT+R2        1378.186     45  2846.371     2860.501     3018.541
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
375  JTT+F         1349.028     62  2822.055     2850.359     3059.267
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
376  JTT+F+I       1346.513     63  2819.026     2848.350     3060.064
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
377  JTT+F+G4      1346.215     63  2818.429     2847.753     3059.467
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
378  JTT+F+I+G4    1346.242     64  2820.484     2850.849     3065.348
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
379  JTT+F+R2      1347.153     64  2822.306     2852.671     3067.170
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
397  JTTDCMut      1380.298     43  2846.596     2859.424     3011.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
398  JTTDCMut+I    1377.871     44  2843.743     2857.212     3012.087
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
399  JTTDCMut+G4   1377.591     44  2843.182     2856.652     3011.526
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
400  JTTDCMut+I+G4 1377.630     45  2845.259     2859.389     3017.429
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
401  JTTDCMut+R2   1378.467     45  2846.933     2861.063     3019.103
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
419  JTTDCMut+F    1349.009     62  2822.018     2850.322     3059.230
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
420  JTTDCMut+F+I  1346.509     63  2819.018     2848.342     3060.056
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
421  JTTDCMut+F+G4 1346.209     63  2818.418     2847.741     3059.456
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
422  JTTDCMut+F+I+G4 1346.237     64  2820.475     2850.840     3065.339
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
423  JTTDCMut+F+R2 1347.139     64  2822.278     2852.643     3067.142
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
441  LG            1394.451     43  2874.902     2887.729     3039.420
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
442  LG+I          1391.794     44  2871.587     2885.057     3039.931
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
443  LG+G4         1391.521     44  2871.042     2884.512     3039.386
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
444  LG+I+G4       1391.540     45  2873.080     2887.209     3045.250
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
445  LG+R2         1392.529     45  2875.058     2889.188     3047.228
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
463  LG+F          1355.978     62  2835.957     2864.261     3073.169
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
464  LG+F+I        1353.286     63  2832.571     2861.895     3073.609
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
465  LG+F+G4       1352.983     63  2831.966     2861.289     3073.004
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
466  LG+F+I+G4     1352.992     64  2833.984     2864.349     3078.848
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
467  LG+F+R2       1354.031     64  2836.062     2866.427     3080.926
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
485  mtART         1486.253     43  3058.506     3071.333     3223.024
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
486  mtART+I       1477.449     44  3042.899     3056.368     3211.243
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
487  mtART+G4      1477.061     44  3042.122     3055.592     3210.466
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
488  mtART+I+G4    1475.902     45  3041.805     3055.934     3213.975
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
489  mtART+R2      1468.017     45  3026.033     3040.163     3198.203
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
507  mtART+F       1388.974     62  2901.947     2930.252     3139.159
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
508  mtART+F+I     1382.961     63  2891.923     2921.246     3132.961
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
509  mtART+F+G4    1382.504     63  2891.008     2920.332     3132.046
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
510  mtART+F+I+G4  1381.975     64  2891.950     2922.315     3136.814
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
511  mtART+F+R2    1382.047     64  2892.094     2922.459     3136.958
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
529  mtMAM         1459.043     43  3004.087     3016.914     3168.605
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
530  mtMAM+I       1451.794     44  2991.589     3005.058     3159.933
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
531  mtMAM+G4      1451.255     44  2990.511     3003.980     3158.855
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
532  mtMAM+I+G4    1450.545     45  2991.091     3005.221     3163.261
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
533  mtMAM+R2      1446.865     45  2983.730     2997.860     3155.900
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
551  mtMAM+F       1368.826     62  2861.653     2889.957     3098.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
552  mtMAM+F+I     1363.104     63  2852.208     2881.531     3093.246
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
553  mtMAM+F+G4    1362.780     63  2851.560     2880.883     3092.598
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
554  mtMAM+F+I+G4  1362.501     64  2853.002     2883.367     3097.866
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
555  mtMAM+F+R2    1362.970     64  2853.940     2884.305     3098.804
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
573  mtREV         1450.677     43  2987.355     3000.182     3151.873
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
574  mtREV+I       1445.934     44  2979.867     2993.337     3148.211
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
575  mtREV+G4      1445.559     44  2979.119     2992.588     3147.463
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
576  mtREV+I+G4    1445.310     45  2980.619     2994.749     3152.789
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
577  mtREV+R2      1447.105     45  2984.210     2998.340     3156.380
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
595  mtREV+F       1361.173     62  2846.345     2874.650     3083.557
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
596  mtREV+F+I     1357.424     63  2840.847     2870.171     3081.885
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
597  mtREV+F+G4    1357.100     63  2840.201     2869.524     3081.239
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
598  mtREV+F+I+G4  1356.998     64  2841.996     2872.361     3086.860
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
599  mtREV+F+R2    1358.749     64  2845.498     2875.863     3090.362
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
617  mtZOA         1450.099     43  2986.197     2999.024     3150.715
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
618  mtZOA+I       1444.897     44  2977.793     2991.263     3146.137
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
619  mtZOA+G4      1444.397     44  2976.793     2990.262     3145.137
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
620  mtZOA+I+G4    1443.942     45  2977.884     2992.014     3150.054
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
621  mtZOA+R2      1444.268     45  2978.536     2992.666     3150.706
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
639  mtZOA+F       1366.130     62  2856.260     2884.564     3093.472
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
640  mtZOA+F+I     1362.615     63  2851.230     2880.554     3092.268
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
641  mtZOA+F+G4    1362.143     63  2850.285     2879.609     3091.323
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
642  mtZOA+F+I+G4  1361.992     64  2851.984     2882.349     3096.848
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
643  mtZOA+F+R2    1363.736     64  2855.473     2885.838     3100.337
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
661  mtMet         1466.637     43  3019.275     3032.102     3183.793
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
662  mtMet+I       1462.163     44  3012.327     3025.796     3180.671
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
663  mtMet+G4      1461.712     44  3011.424     3024.894     3179.768
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
664  mtMet+I+G4    1461.430     45  3012.860     3026.990     3185.030
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
665  mtMet+R2      1463.091     45  3016.181     3030.311     3188.351
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
683  mtMet+F       1357.962     62  2839.924     2868.228     3077.136
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
684  mtMet+F+I     1354.546     63  2835.091     2864.415     3076.129
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
685  mtMet+F+G4    1354.146     63  2834.292     2863.615     3075.330
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
686  mtMet+F+I+G4  1354.049     64  2836.099     2866.464     3080.963
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
687  mtMet+F+R2    1355.700     64  2839.400     2869.765     3084.264
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
705  mtVer         1460.234     43  3006.468     3019.295     3170.986
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
706  mtVer+I       1455.666     44  2999.331     3012.801     3167.675
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
707  mtVer+G4      1455.190     44  2998.380     3011.850     3166.724
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
708  mtVer+I+G4    1454.902     45  2999.804     3013.933     3171.974
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
709  mtVer+R2      1456.683     45  3003.367     3017.497     3175.537
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
727  mtVer+F       1359.351     62  2842.702     2871.006     3079.914
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
728  mtVer+F+I     1355.706     63  2837.412     2866.736     3078.450
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
729  mtVer+F+G4    1355.371     63  2836.741     2866.065     3077.779
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
730  mtVer+F+I+G4  1355.265     64  2838.529     2868.894     3083.393
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
731  mtVer+F+R2    1357.049     64  2842.098     2872.463     3086.962
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
749  mtInv         1494.865     43  3075.730     3088.557     3240.248
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
750  mtInv+I       1490.587     44  3069.175     3082.644     3237.519
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
751  mtInv+G4      1490.184     44  3068.369     3081.838     3236.713
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
752  mtInv+I+G4    1489.951     45  3069.902     3084.032     3242.072
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
753  mtInv+R2      1492.242     45  3074.483     3088.613     3246.653
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
771  mtInv+F       1356.500     62  2836.999     2865.304     3074.211
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
772  mtInv+F+I     1353.621     63  2833.243     2862.566     3074.281
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
773  mtInv+F+G4    1353.213     63  2832.426     2861.749     3073.464
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
774  mtInv+F+I+G4  1353.180     64  2834.361     2864.726     3079.225
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
775  mtInv+F+R2    1354.437     64  2836.875     2867.240     3081.739
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
793  PMB           1394.601     43  2875.201     2888.029     3039.719
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
794  PMB+I         1392.049     44  2872.099     2885.568     3040.443
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
795  PMB+G4        1391.751     44  2871.501     2884.971     3039.845
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
796  PMB+I+G4      1391.776     45  2873.553     2887.682     3045.723
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
797  PMB+R2        1392.713     45  2875.425     2889.555     3047.595
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
815  PMB+F         1365.254     62  2854.507     2882.812     3091.719
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
816  PMB+F+I       1362.801     63  2851.602     2880.926     3092.640
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
817  PMB+F+G4      1362.491     63  2850.981     2880.305     3092.019
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
818  PMB+F+I+G4    1362.526     64  2853.051     2883.416     3097.915
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
819  PMB+F+R2      1363.402     64  2854.804     2885.169     3099.668
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
837  Q.bird        1384.783     43  2855.566     2868.393     3020.084
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
838  Q.bird+I      1381.308     44  2850.616     2864.086     3018.960
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
839  Q.bird+G4     1381.065     44  2850.131     2863.600     3018.475
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
840  Q.bird+I+G4   1381.020     45  2852.040     2866.169     3024.210
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
841  Q.bird+R2     1382.575     45  2855.149     2869.279     3027.319
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
859  Q.bird+F      1351.438     62  2826.876     2855.181     3064.088
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
860  Q.bird+F+I    1347.642     63  2821.284     2850.608     3062.322
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
861  Q.bird+F+G4   1347.384     63  2820.769     2850.093     3061.807
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
862  Q.bird+F+I+G4 1347.309     64  2822.617     2852.982     3067.481
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
863  Q.bird+F+R2   1349.034     64  2826.067     2856.432     3070.931
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
881  Q.insect      1405.856     43  2897.713     2910.540     3062.231
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
882  Q.insect+I    1402.799     44  2893.597     2907.067     3061.941
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
883  Q.insect+G4   1402.528     44  2893.056     2906.525     3061.400
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
884  Q.insect+I+G4 1402.504     45  2895.007     2909.137     3067.177
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
885  Q.insect+R2   1403.793     45  2897.586     2911.715     3069.756
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
903  Q.insect+F    1355.875     62  2835.751     2864.055     3072.963
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
904  Q.insect+F+I  1352.900     63  2831.800     2861.124     3072.838
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
905  Q.insect+F+G4 1352.594     63  2831.188     2860.512     3072.226
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
906  Q.insect+F+I+G4 1352.567     64  2833.133     2863.498     3077.997
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
907  Q.insect+F+R2 1353.828     64  2835.656     2866.021     3080.520
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
925  Q.mammal      1388.000     43  2862.000     2874.828     3026.518
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
926  Q.mammal+I    1384.695     44  2857.390     2870.860     3025.734
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
927  Q.mammal+G4   1384.437     44  2856.874     2870.343     3025.218
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
928  Q.mammal+I+G4 1384.395     45  2858.790     2872.920     3030.960
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
929  Q.mammal+R2   1385.851     45  2861.702     2875.832     3033.872
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
947  Q.mammal+F    1352.150     62  2828.299     2856.603     3065.511
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
948  Q.mammal+F+I  1348.715     63  2823.430     2852.754     3064.468
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
949  Q.mammal+F+G4 1348.432     63  2822.864     2852.187     3063.902
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
950  Q.mammal+F+I+G4 1348.369     64  2824.737     2855.102     3069.601
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
951  Q.mammal+F+R2 1349.945     64  2827.889     2858.254     3072.753
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
969  Q.pfam        1399.271     43  2884.542     2897.369     3049.060
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
970  Q.pfam+I      1396.375     44  2880.751     2894.220     3049.095
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
971  Q.pfam+G4     1396.102     44  2880.205     2893.674     3048.549
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
972  Q.pfam+I+G4   1396.100     45  2882.199     2896.329     3054.369
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
973  Q.pfam+R2     1397.258     45  2884.517     2898.647     3056.687
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
991  Q.pfam+F      1357.755     62  2839.509     2867.814     3076.721
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
992  Q.pfam+F+I    1354.894     63  2835.789     2865.113     3076.827
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
993  Q.pfam+F+G4   1354.608     63  2835.216     2864.540     3076.254
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
994  Q.pfam+F+I+G4 1354.603     64  2837.205     2867.570     3082.069
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
995  Q.pfam+F+R2   1355.752     64  2839.504     2869.869     3084.368
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1013  Q.plant       1396.497     43  2878.994     2891.821     3043.512
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1014  Q.plant+I     1393.218     44  2874.436     2887.905     3042.780
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1015  Q.plant+G4    1392.986     44  2873.972     2887.441     3042.316
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1016  Q.plant+I+G4  1392.955     45  2875.911     2890.041     3048.081
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1017  Q.plant+R2    1394.367     45  2878.735     2892.865     3050.905
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1035  Q.plant+F     1349.782     62  2823.563     2851.868     3060.775
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1036  Q.plant+F+I   1346.597     63  2819.194     2848.518     3060.232
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1037  Q.plant+F+G4  1346.360     63  2818.720     2848.043     3059.758
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1038  Q.plant+F+I+G4 1346.334     64  2820.667     2851.032     3065.531
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1039  Q.plant+F+R2  1347.680     64  2823.360     2853.725     3068.224
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1057  Q.yeast       1424.167     43  2934.335     2947.162     3098.853
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1058  Q.yeast+I     1421.083     44  2930.167     2943.636     3098.511
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1059  Q.yeast+G4    1420.818     44  2929.635     2943.105     3097.979
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1060  Q.yeast+I+G4  1420.797     45  2931.594     2945.724     3103.764
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1061  Q.yeast+R2    1422.093     45  2934.186     2948.316     3106.356
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1079  Q.yeast+F     1357.362     62  2838.724     2867.028     3075.936
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1080  Q.yeast+F+I   1354.363     63  2834.727     2864.051     3075.765
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1081  Q.yeast+F+G4  1354.052     63  2834.103     2863.427     3075.141
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1082  Q.yeast+F+I+G4 1354.024     64  2836.048     2866.413     3080.912
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1083  Q.yeast+F+R2  1355.301     64  2838.601     2868.966     3083.465
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1101  rtREV         1425.912     43  2937.823     2950.651     3102.341
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1102  rtREV+I       1422.519     44  2933.038     2946.507     3101.382
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1103  rtREV+G4      1422.307     44  2932.614     2946.084     3100.958
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1104  rtREV+I+G4    1422.289     45  2934.578     2948.708     3106.748
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1105  rtREV+R2      1423.637     45  2937.274     2951.404     3109.444
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1123  rtREV+F       1368.777     62  2861.553     2889.858     3098.765
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1124  rtREV+F+I     1365.145     63  2856.291     2885.614     3097.329
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1125  rtREV+F+G4    1364.902     63  2855.805     2885.128     3096.843
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1126  rtREV+F+I+G4  1364.850     64  2857.700     2888.065     3102.564
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1127  rtREV+F+R2    1366.402     64  2860.803     2891.168     3105.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1145  VT            1395.521     43  2877.042     2889.869     3041.560
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1146  VT+I          1393.062     44  2874.123     2887.593     3042.467
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1147  VT+G4         1392.787     44  2873.573     2887.043     3041.917
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1148  VT+I+G4       1392.823     45  2875.645     2889.775     3047.815
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1149  VT+R2         1393.681     45  2877.362     2891.492     3049.532
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1167  VT+F          1357.809     62  2839.617     2867.922     3076.829
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1168  VT+F+I        1355.362     63  2836.724     2866.048     3077.762
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1169  VT+F+G4       1355.074     63  2836.149     2865.472     3077.187
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1170  VT+F+I+G4     1355.110     64  2838.220     2868.585     3083.084
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1171  VT+F+R2       1355.969     64  2839.938     2870.303     3084.802
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1189  WAG           1388.415     43  2862.829     2875.656     3027.347
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1190  WAG+I         1386.190     44  2860.380     2873.850     3028.724
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1191  WAG+G4        1385.907     44  2859.814     2873.284     3028.158
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1192  WAG+I+G4      1385.972     45  2861.944     2876.074     3034.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1193  WAG+R2        1386.665     45  2863.330     2877.460     3035.500
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1211  WAG+F         1351.899     62  2827.798     2856.103     3065.010
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1212  WAG+F+I       1349.663     63  2825.326     2854.649     3066.364
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1213  WAG+F+G4      1349.363     63  2824.725     2854.049     3065.763
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1214  WAG+F+I+G4    1349.425     64  2826.850     2857.215     3071.714
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1215  WAG+F+R2      1350.139     64  2828.278     2858.643     3073.142
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1233  Q.iridoviridae 1391.771     43  2869.542     2882.369     3034.060
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1234  Q.iridoviridae+I 1389.288     44  2866.577     2880.046     3034.921
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1235  Q.iridoviridae+G4 1389.032     44  2866.064     2879.534     3034.408
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1236  Q.iridoviridae+I+G4 1389.071     45  2868.142     2882.271     3040.312
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1237  Q.iridoviridae+R2 1389.921     45  2869.842     2883.972     3042.012
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1255  Q.iridoviridae+F 1354.763     62  2833.526     2861.831     3070.738
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1256  Q.iridoviridae+F+I 1352.211     63  2830.422     2859.746     3071.460
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1257  Q.iridoviridae+F+G4 1351.918     63  2829.837     2859.160     3070.875
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1258  Q.iridoviridae+F+I+G4 1351.948     64  2831.895     2862.260     3076.759
Reading model parameters from file Q.iridoviridae
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1259  Q.iridoviridae+F+R2 1352.871     64  2833.742     2864.107     3078.606
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1277  Q.mcv         1358.703     43  2803.406     2816.234     2967.924
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1278  Q.mcv+I       1356.336     44  2800.672     2814.141     2969.016
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1279  Q.mcv+G4      1356.066     44  2800.133     2813.602     2968.477
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1280  Q.mcv+I+G4    1356.116     45  2802.232     2816.362     2974.402
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1281  Q.mcv+R2      1356.894     45  2803.788     2817.918     2975.958
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1299  Q.mcv+F       1347.558     62  2819.115     2847.420     3056.327
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1300  Q.mcv+F+I     1345.117     63  2816.235     2845.558     3057.273
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1301  Q.mcv+F+G4    1344.849     63  2815.698     2845.021     3056.736
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1302  Q.mcv+F+I+G4  1344.891     64  2817.783     2848.148     3062.647
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
1303  Q.mcv+F+R2    1345.719     64  2819.438     2849.803     3064.302
Akaike Information Criterion:           Q.mcv+G4
Corrected Akaike Information Criterion: Q.mcv+G4
Bayesian Information Criterion:         Q.mcv
Best-fit model: Q.mcv chosen according to BIC

All model information printed to iqtree_species/OG0000046.fa.model.gz
CPU time for ModelFinder: 12.580 seconds (0h:0m:12s)
Wall-clock time for ModelFinder: 3.333 seconds (0h:0m:3s)
Generating 1000 samples for ultrafast bootstrap (seed: 617732)...
Reading model parameters from file Q.mcv
WARNING: Normalizing state frequencies so that sum of them equals to 1

NOTE: 0 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -1358.703
Optimal log-likelihood: -1358.703
Parameters optimization took 1 rounds (0.001 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.00563884 secs using 397.3% CPU
Computing ML distances took 0.005671 sec (of wall-clock time) 0.022515 sec (of CPU time)
Setting up auxiliary I and S matrices: done in 9.20296e-05 secs
Constructing RapidNJ tree: done in 0.000427008 secs using 318.7% CPU
Computing RapidNJ tree took 0.000548 sec (of wall-clock time) 0.001369 sec (of CPU time)
Log-likelihood of RapidNJ tree: -1358.711
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 0.048 second
Computing log-likelihood of 98 initial trees ... 0.071 seconds
Current best score: -1358.703

Do NNI search on 20 best initial trees
Optimizing NNI: done in 0.004848 secs using 472.3% CPU
Estimate model parameters (epsilon = 0.100)
BETTER TREE FOUND at iteration 1: -1358.703
Optimizing NNI: done in 0.00912809 secs using 487.2% CPU
BETTER TREE FOUND at iteration 2: -1358.703
Optimizing NNI: done in 0.00905108 secs using 485.5% CPU
Optimizing NNI: done in 0.00878692 secs using 486.7% CPU
Optimizing NNI: done in 0.00899506 secs using 485.9% CPU
BETTER TREE FOUND at iteration 5: -1358.703
Optimizing NNI: done in 0.00805998 secs using 484.4% CPU
Optimizing NNI: done in 0.00814891 secs using 485.8% CPU
Optimizing NNI: done in 0.00808215 secs using 485.5% CPU
Optimizing NNI: done in 0.008358 secs using 486% CPU
Optimizing NNI: done in 0.00890803 secs using 385.7% CPU
Iteration 10 / LogL: -1358.703 / Time: 0h:0m:0s
Optimizing NNI: done in 0.00895 secs using 386% CPU
Optimizing NNI: done in 0.00903201 secs using 385.9% CPU
Optimizing NNI: done in 0.00787807 secs using 383.7% CPU
Optimizing NNI: done in 0.00884914 secs using 388.4% CPU
Optimizing NNI: done in 0.00896502 secs using 386% CPU
Optimizing NNI: done in 0.00797796 secs using 384.5% CPU
Optimizing NNI: done in 0.0087359 secs using 385.9% CPU
Optimizing NNI: done in 0.008533 secs using 385.4% CPU
Optimizing NNI: done in 0.00867891 secs using 385.7% CPU
Optimizing NNI: done in 0.00896096 secs using 387% CPU
Iteration 20 / LogL: -1358.703 / Time: 0h:0m:0s
Finish initializing candidate tree set (17)
Current best tree score: -1358.703 / CPU time: 0.300
Number of iterations: 20
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 0.023349 secs using 394.7% CPU
Optimizing NNI: done in 0.014333 secs using 397.3% CPU
Optimizing NNI: done in 0.018501 secs using 393.5% CPU
Optimizing NNI: done in 0.0228081 secs using 395% CPU
Optimizing NNI: done in 0.0176461 secs using 392.6% CPU
Optimizing NNI: done in 0.0166259 secs using 400% CPU
Optimizing NNI: done in 0.0201421 secs using 393.4% CPU
Optimizing NNI: done in 0.0202079 secs using 400% CPU
Optimizing NNI: done in 0.0170701 secs using 393.6% CPU
Optimizing NNI: done in 0.0124381 secs using 400% CPU
Iteration 30 / LogL: -1358.706 / Time: 0h:0m:0s (0h:0m:1s left)
Optimizing NNI: done in 0.0127311 secs using 390.2% CPU
Optimizing NNI: done in 0.0102658 secs using 387% CPU
Optimizing NNI: done in 0.0285928 secs using 395.2% CPU
Optimizing NNI: done in 0.0134091 secs using 391.5% CPU
Optimizing NNI: done in 0.012569 secs using 389.7% CPU
Optimizing NNI: done in 0.0175769 secs using 400% CPU
Optimizing NNI: done in 0.0137322 secs using 390.5% CPU
Optimizing NNI: done in 0.0160902 secs using 400% CPU
Optimizing NNI: done in 0.0206139 secs using 393.8% CPU
Optimizing NNI: done in 0.0130508 secs using 390.6% CPU
Iteration 40 / LogL: -1418.754 / Time: 0h:0m:0s (0h:0m:1s left)
Optimizing NNI: done in 0.0176919 secs using 400.6% CPU
Optimizing NNI: done in 0.0124838 secs using 399.9% CPU
BETTER TREE FOUND at iteration 42: -1358.703
Optimizing NNI: done in 0.0174091 secs using 394% CPU
Optimizing NNI: done in 0.019156 secs using 392.8% CPU
Optimizing NNI: done in 0.0139351 secs using 389.5% CPU
Optimizing NNI: done in 0.0178289 secs using 399.5% CPU
Optimizing NNI: done in 0.0180869 secs using 393% CPU
Optimizing NNI: done in 0.0236959 secs using 394.5% CPU
Optimizing NNI: done in 0.0173359 secs using 393.4% CPU
Optimizing NNI: done in 0.0165219 secs using 392.2% CPU
Iteration 50 / LogL: -1358.705 / Time: 0h:0m:0s (0h:0m:1s left)
Log-likelihood cutoff on original alignment: -1413.078
Optimizing NNI: done in 0.014909 secs using 390.2% CPU
Optimizing NNI: done in 0.0203381 secs using 393.5% CPU
Optimizing NNI: done in 0.00891399 secs using 386.4% CPU
Optimizing NNI: done in 0.015692 secs using 397.8% CPU
Optimizing NNI: done in 0.0176029 secs using 396.1% CPU
Optimizing NNI: done in 0.0138781 secs using 390.9% CPU
Optimizing NNI: done in 0.021287 secs using 376.4% CPU
Optimizing NNI: done in 0.0121839 secs using 389.4% CPU
BETTER TREE FOUND at iteration 58: -1358.703
Optimizing NNI: done in 0.0178599 secs using 400.7% CPU
Optimizing NNI: done in 0.00897884 secs using 400% CPU
Iteration 60 / LogL: -1358.705 / Time: 0h:0m:1s (0h:0m:1s left)
Optimizing NNI: done in 0.00958395 secs using 386.4% CPU
Optimizing NNI: done in 0.0159531 secs using 391% CPU
Optimizing NNI: done in 0.0114639 secs using 389% CPU
Optimizing NNI: done in 0.0172608 secs using 392.5% CPU
Optimizing NNI: done in 0.0171242 secs using 392.7% CPU
Optimizing NNI: done in 0.010411 secs using 387.9% CPU
Optimizing NNI: done in 0.0168159 secs using 393% CPU
Optimizing NNI: done in 0.0226419 secs using 396.6% CPU
Optimizing NNI: done in 0.0136189 secs using 390% CPU
Optimizing NNI: done in 0.0166612 secs using 375% CPU
Iteration 70 / LogL: -1358.704 / Time: 0h:0m:1s (0h:0m:1s left)
Optimizing NNI: done in 0.0140269 secs using 389.9% CPU
Optimizing NNI: done in 0.015702 secs using 391.3% CPU
Optimizing NNI: done in 0.0166662 secs using 392.1% CPU
Optimizing NNI: done in 0.0150251 secs using 390.8% CPU
Optimizing NNI: done in 0.0127449 secs using 399.9% CPU
Optimizing NNI: done in 0.017622 secs using 399.2% CPU
Optimizing NNI: done in 0.0172369 secs using 392% CPU
Optimizing NNI: done in 0.0208678 secs using 354.7% CPU
Optimizing NNI: done in 0.00923204 secs using 360% CPU
Optimizing NNI: done in 0.00919199 secs using 361.1% CPU
Iteration 80 / LogL: -1365.171 / Time: 0h:0m:1s (0h:0m:1s left)
Optimizing NNI: done in 0.0166919 secs using 387.6% CPU
Optimizing NNI: done in 0.012181 secs using 395.5% CPU
Optimizing NNI: done in 0.0135171 secs using 454.2% CPU
Optimizing NNI: done in 0.011843 secs using 404% CPU
Optimizing NNI: done in 0.020663 secs using 390.4% CPU
Optimizing NNI: done in 0.0221431 secs using 370.3% CPU
Optimizing NNI: done in 0.012229 secs using 394.4% CPU
Optimizing NNI: done in 0.023483 secs using 406.5% CPU
Optimizing NNI: done in 0.00553489 secs using 316.7% CPU
Optimizing NNI: done in 0.0180171 secs using 423.9% CPU
Iteration 90 / LogL: -1358.706 / Time: 0h:0m:1s (0h:0m:1s left)
Optimizing NNI: done in 0.015327 secs using 390.8% CPU
Optimizing NNI: done in 0.0164762 secs using 391.6% CPU
Optimizing NNI: done in 0.012325 secs using 399.8% CPU
Optimizing NNI: done in 0.0141609 secs using 395.7% CPU
Optimizing NNI: done in 0.030793 secs using 395.6% CPU
Optimizing NNI: done in 0.0181131 secs using 400% CPU
Optimizing NNI: done in 0.011235 secs using 388.4% CPU
Optimizing NNI: done in 0.0131152 secs using 390.1% CPU
Optimizing NNI: done in 0.0138538 secs using 391.5% CPU
Optimizing NNI: done in 0.012677 secs using 390.3% CPU
Iteration 100 / LogL: -1367.237 / Time: 0h:0m:1s (0h:0m:1s left)
Log-likelihood cutoff on original alignment: -1413.078
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.981
NOTE: UFBoot does not converge, continue at least 100 more iterations
Optimizing NNI: done in 0.012706 secs using 390.6% CPU
Optimizing NNI: done in 0.018749 secs using 397.8% CPU
Optimizing NNI: done in 0.0103431 secs using 387.5% CPU
Optimizing NNI: done in 0.0127189 secs using 390.6% CPU
Optimizing NNI: done in 0.0128381 secs using 367.4% CPU
Optimizing NNI: done in 0.012557 secs using 389.4% CPU
Optimizing NNI: done in 0.0125091 secs using 389.8% CPU
Optimizing NNI: done in 0.0216892 secs using 393.5% CPU
Optimizing NNI: done in 0.0223911 secs using 394.4% CPU
Optimizing NNI: done in 0.019907 secs using 400% CPU
Iteration 110 / LogL: -1358.706 / Time: 0h:0m:2s (0h:0m:1s left)
Optimizing NNI: done in 0.0161731 secs using 391.8% CPU
Optimizing NNI: done in 0.0138991 secs using 390.1% CPU
Optimizing NNI: done in 0.0169239 secs using 391.7% CPU
Optimizing NNI: done in 0.015089 secs using 392.3% CPU
Optimizing NNI: done in 0.0161171 secs using 398.8% CPU
Optimizing NNI: done in 0.020386 secs using 378.7% CPU
Optimizing NNI: done in 0.0166171 secs using 390.8% CPU
Optimizing NNI: done in 0.018739 secs using 399.1% CPU
Optimizing NNI: done in 0.0237141 secs using 395.6% CPU
Optimizing NNI: done in 0.0213029 secs using 393.3% CPU
Iteration 120 / LogL: -1358.704 / Time: 0h:0m:2s (0h:0m:1s left)
Optimizing NNI: done in 0.00854993 secs using 384.8% CPU
Optimizing NNI: done in 0.015969 secs using 391.5% CPU
Optimizing NNI: done in 0.0205631 secs using 393% CPU
Optimizing NNI: done in 0.0133469 secs using 390.2% CPU
Optimizing NNI: done in 0.01472 secs using 391.6% CPU
Optimizing NNI: done in 0.0233629 secs using 394.3% CPU
Optimizing NNI: done in 0.015486 secs using 400% CPU
Optimizing NNI: done in 0.0240469 secs using 394.4% CPU
Optimizing NNI: done in 0.0194809 secs using 399.6% CPU
Optimizing NNI: done in 0.00727701 secs using 396.6% CPU
Iteration 130 / LogL: -1358.705 / Time: 0h:0m:2s (0h:0m:1s left)
Optimizing NNI: done in 0.01566 secs using 391.6% CPU
Optimizing NNI: done in 0.0232599 secs using 382.9% CPU
Optimizing NNI: done in 0.0190849 secs using 393.2% CPU
Optimizing NNI: done in 0.0109322 secs using 387.6% CPU
Optimizing NNI: done in 0.0189168 secs using 393.3% CPU
Optimizing NNI: done in 0.011107 secs using 399.9% CPU
Optimizing NNI: done in 0.014353 secs using 391.3% CPU
Optimizing NNI: done in 0.020112 secs using 393.2% CPU
Optimizing NNI: done in 0.018317 secs using 393.2% CPU
Optimizing NNI: done in 0.0200939 secs using 393.4% CPU
Iteration 140 / LogL: -1358.706 / Time: 0h:0m:2s (0h:0m:1s left)
Optimizing NNI: done in 0.00724792 secs using 383.3% CPU
Optimizing NNI: done in 0.0163128 secs using 395.1% CPU
Optimizing NNI: done in 0.0169492 secs using 391.8% CPU
Optimizing NNI: done in 0.020828 secs using 400% CPU
Optimizing NNI: done in 0.0179141 secs using 397.3% CPU
Optimizing NNI: done in 0.0134461 secs using 399.1% CPU
Optimizing NNI: done in 0.0127211 secs using 389.9% CPU
Optimizing NNI: done in 0.0129631 secs using 390% CPU
Optimizing NNI: done in 0.013377 secs using 390.5% CPU
Optimizing NNI: done in 0.0168049 secs using 400% CPU
Iteration 150 / LogL: -1358.704 / Time: 0h:0m:2s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -1413.078
Optimizing NNI: done in 0.016361 secs using 392% CPU
Optimizing NNI: done in 0.0202911 secs using 393.9% CPU
Optimizing NNI: done in 0.0125999 secs using 390.8% CPU
Optimizing NNI: done in 0.0135388 secs using 390.2% CPU
Optimizing NNI: done in 0.0190749 secs using 330.7% CPU
Optimizing NNI: done in 0.00944591 secs using 386.7% CPU
Optimizing NNI: done in 0.02318 secs using 399.9% CPU
Optimizing NNI: done in 0.016499 secs using 391.6% CPU
Optimizing NNI: done in 0.00915313 secs using 385.8% CPU
Optimizing NNI: done in 0.0143981 secs using 391.2% CPU
Iteration 160 / LogL: -1358.705 / Time: 0h:0m:3s (0h:0m:0s left)
Optimizing NNI: done in 0.014307 secs using 390.1% CPU
Optimizing NNI: done in 0.017767 secs using 392.7% CPU
Optimizing NNI: done in 0.0221541 secs using 394.1% CPU
Optimizing NNI: done in 0.014606 secs using 390.9% CPU
Optimizing NNI: done in 0.0136518 secs using 392.2% CPU
Optimizing NNI: done in 0.0157919 secs using 391.1% CPU
Optimizing NNI: done in 0.0158801 secs using 390.6% CPU
Optimizing NNI: done in 0.0181959 secs using 393.1% CPU
Optimizing NNI: done in 0.0123351 secs using 396.2% CPU
Optimizing NNI: done in 0.0213041 secs using 394.4% CPU
Iteration 170 / LogL: -1358.707 / Time: 0h:0m:3s (0h:0m:0s left)
Optimizing NNI: done in 0.0169981 secs using 392.7% CPU
Optimizing NNI: done in 0.0157959 secs using 366.1% CPU
Optimizing NNI: done in 0.018805 secs using 394.8% CPU
Optimizing NNI: done in 0.018158 secs using 392.1% CPU
Optimizing NNI: done in 0.0162468 secs using 399.3% CPU
Optimizing NNI: done in 0.0128231 secs using 390.1% CPU
Optimizing NNI: done in 0.00913787 secs using 387% CPU
Optimizing NNI: done in 0.014148 secs using 392.9% CPU
Optimizing NNI: done in 0.0165091 secs using 392.1% CPU
Optimizing NNI: done in 0.0140831 secs using 390.3% CPU
Iteration 180 / LogL: -1358.706 / Time: 0h:0m:3s (0h:0m:0s left)
Optimizing NNI: done in 0.0259991 secs using 399.3% CPU
Optimizing NNI: done in 0.011142 secs using 358.9% CPU
Optimizing NNI: done in 0.022372 secs using 394.7% CPU
Optimizing NNI: done in 0.0175688 secs using 399.9% CPU
Optimizing NNI: done in 0.0140848 secs using 390.2% CPU
Optimizing NNI: done in 0.00871801 secs using 385.1% CPU
Optimizing NNI: done in 0.0225859 secs using 394.3% CPU
Optimizing NNI: done in 0.0140891 secs using 389.7% CPU
Optimizing NNI: done in 0.0166221 secs using 392.2% CPU
Optimizing NNI: done in 0.0170331 secs using 391.8% CPU
BETTER TREE FOUND at iteration 190: -1358.703
Iteration 190 / LogL: -1358.703 / Time: 0h:0m:3s (0h:0m:1s left)
Optimizing NNI: done in 0.00893712 secs using 387.7% CPU
Optimizing NNI: done in 0.00485396 secs using 389.4% CPU
Optimizing NNI: done in 0.014071 secs using 441.1% CPU
Optimizing NNI: done in 0.0127358 secs using 382.7% CPU
Optimizing NNI: done in 0.019398 secs using 409.2% CPU
Optimizing NNI: done in 0.0166311 secs using 388.6% CPU
Optimizing NNI: done in 0.018677 secs using 421.2% CPU
Optimizing NNI: done in 0.014334 secs using 434.8% CPU
Optimizing NNI: done in 0.0134511 secs using 367.6% CPU
Optimizing NNI: done in 0.00849104 secs using 382.6% CPU
Iteration 200 / LogL: -1362.927 / Time: 0h:0m:3s (0h:0m:1s left)
Log-likelihood cutoff on original alignment: -1413.078
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.989
NOTE: UFBoot does not converge, continue at least 100 more iterations
Optimizing NNI: done in 0.028394 secs using 415.3% CPU
Optimizing NNI: done in 0.0126309 secs using 389.8% CPU
Optimizing NNI: done in 0.0153501 secs using 391% CPU
Optimizing NNI: done in 0.0210512 secs using 393.5% CPU
Optimizing NNI: done in 0.017653 secs using 392.3% CPU
Optimizing NNI: done in 0.0234442 secs using 393.9% CPU
Optimizing NNI: done in 0.0123162 secs using 389.6% CPU
Optimizing NNI: done in 0.0210381 secs using 393.5% CPU
Optimizing NNI: done in 0.0175588 secs using 399.5% CPU
Optimizing NNI: done in 0.0218771 secs using 393.8% CPU
Iteration 210 / LogL: -1358.705 / Time: 0h:0m:4s (0h:0m:1s left)
Optimizing NNI: done in 0.0174189 secs using 392.7% CPU
Optimizing NNI: done in 0.0130188 secs using 389.7% CPU
Optimizing NNI: done in 0.0205119 secs using 393.8% CPU
Optimizing NNI: done in 0.017276 secs using 392.5% CPU
Optimizing NNI: done in 0.0183599 secs using 393.1% CPU
Optimizing NNI: done in 0.0143089 secs using 390.7% CPU
Optimizing NNI: done in 0.018892 secs using 396.4% CPU
Optimizing NNI: done in 0.0189471 secs using 393% CPU
Optimizing NNI: done in 0.019176 secs using 393.8% CPU
Optimizing NNI: done in 0.012188 secs using 388.7% CPU
Iteration 220 / LogL: -1358.706 / Time: 0h:0m:4s (0h:0m:1s left)
Optimizing NNI: done in 0.0191939 secs using 393.1% CPU
Optimizing NNI: done in 0.021987 secs using 396% CPU
Optimizing NNI: done in 0.012269 secs using 389.6% CPU
Optimizing NNI: done in 0.0141871 secs using 312.5% CPU
Optimizing NNI: done in 0.0151899 secs using 391.3% CPU
Optimizing NNI: done in 0.0156741 secs using 391.7% CPU
Optimizing NNI: done in 0.0146642 secs using 391.9% CPU
Optimizing NNI: done in 0.017169 secs using 395.6% CPU
Optimizing NNI: done in 0.0132618 secs using 361.9% CPU
Optimizing NNI: done in 0.00935507 secs using 385.8% CPU
Iteration 230 / LogL: -1358.703 / Time: 0h:0m:4s (0h:0m:1s left)
Optimizing NNI: done in 0.0174701 secs using 395% CPU
Optimizing NNI: done in 0.0114169 secs using 391.4% CPU
Optimizing NNI: done in 0.022361 secs using 394.1% CPU
Optimizing NNI: done in 0.0208089 secs using 395.8% CPU
Optimizing NNI: done in 0.0274949 secs using 395.1% CPU
Optimizing NNI: done in 0.0247118 secs using 396% CPU
Optimizing NNI: done in 0.010402 secs using 391.1% CPU
Optimizing NNI: done in 0.0162129 secs using 399.8% CPU
Optimizing NNI: done in 0.00952387 secs using 386.6% CPU
Optimizing NNI: done in 0.0173051 secs using 397.1% CPU
Iteration 240 / LogL: -1411.167 / Time: 0h:0m:4s (0h:0m:1s left)
Optimizing NNI: done in 0.0141521 secs using 390.4% CPU
Optimizing NNI: done in 0.0133681 secs using 397.5% CPU
Optimizing NNI: done in 0.020772 secs using 392.5% CPU
Optimizing NNI: done in 0.0140929 secs using 389.1% CPU
Optimizing NNI: done in 0.00842786 secs using 386.9% CPU
Optimizing NNI: done in 0.00956202 secs using 394.6% CPU
Optimizing NNI: done in 0.0169179 secs using 393.9% CPU
Optimizing NNI: done in 0.014322 secs using 390.7% CPU
Optimizing NNI: done in 0.0216601 secs using 399.4% CPU
Optimizing NNI: done in 0.018681 secs using 392.6% CPU
Iteration 250 / LogL: -1358.705 / Time: 0h:0m:4s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -1413.078
Optimizing NNI: done in 0.0182981 secs using 393.9% CPU
Optimizing NNI: done in 0.016567 secs using 400% CPU
Optimizing NNI: done in 0.0123391 secs using 392.6% CPU
Optimizing NNI: done in 0.010211 secs using 387.2% CPU
Optimizing NNI: done in 0.0138409 secs using 391.7% CPU
Optimizing NNI: done in 0.020031 secs using 393.8% CPU
Optimizing NNI: done in 0.022531 secs using 396.4% CPU
Optimizing NNI: done in 0.017364 secs using 389.1% CPU
Optimizing NNI: done in 0.0180562 secs using 393.1% CPU
Optimizing NNI: done in 0.0143189 secs using 396.1% CPU
Iteration 260 / LogL: -1358.704 / Time: 0h:0m:5s (0h:0m:0s left)
Optimizing NNI: done in 0.0194821 secs using 399.1% CPU
Optimizing NNI: done in 0.0186539 secs using 395.3% CPU
Optimizing NNI: done in 0.014442 secs using 398% CPU
Optimizing NNI: done in 0.0154061 secs using 391.9% CPU
Optimizing NNI: done in 0.0193419 secs using 400% CPU
Optimizing NNI: done in 0.013844 secs using 390.4% CPU
Optimizing NNI: done in 0.017735 secs using 392.7% CPU
Optimizing NNI: done in 0.0255311 secs using 394.8% CPU
Optimizing NNI: done in 0.0200958 secs using 393.2% CPU
Optimizing NNI: done in 0.028749 secs using 395.3% CPU
Iteration 270 / LogL: -1362.930 / Time: 0h:0m:5s (0h:0m:0s left)
Optimizing NNI: done in 0.0123582 secs using 389.2% CPU
Optimizing NNI: done in 0.00941515 secs using 386.1% CPU
Optimizing NNI: done in 0.00927997 secs using 385.5% CPU
Optimizing NNI: done in 0.0219231 secs using 400% CPU
Optimizing NNI: done in 0.0141652 secs using 395.9% CPU
Optimizing NNI: done in 0.0220211 secs using 399.7% CPU
Optimizing NNI: done in 0.016813 secs using 400% CPU
Optimizing NNI: done in 0.00800896 secs using 392.4% CPU
Optimizing NNI: done in 0.0244989 secs using 397.9% CPU
Optimizing NNI: done in 0.0212059 secs using 394% CPU
Iteration 280 / LogL: -1358.707 / Time: 0h:0m:5s (0h:0m:0s left)
Optimizing NNI: done in 0.0154099 secs using 390.7% CPU
Optimizing NNI: done in 0.018981 secs using 393.3% CPU
Optimizing NNI: done in 0.017725 secs using 392.4% CPU
Optimizing NNI: done in 0.0159781 secs using 392% CPU
Optimizing NNI: done in 0.0123529 secs using 389.6% CPU
Optimizing NNI: done in 0.0202219 secs using 393.6% CPU
Optimizing NNI: done in 0.0224161 secs using 394.3% CPU
Optimizing NNI: done in 0.0135388 secs using 390.8% CPU
Optimizing NNI: done in 0.0146189 secs using 397.9% CPU
Optimizing NNI: done in 0.0178699 secs using 391.6% CPU
Iteration 290 / LogL: -1358.704 / Time: 0h:0m:5s (0h:0m:0s left)
Optimizing NNI: done in 0.00825095 secs using 384.5% CPU
Optimizing NNI: done in 0.0148911 secs using 389.9% CPU
Optimizing NNI: done in 0.0162361 secs using 393.5% CPU
Optimizing NNI: done in 0.00932312 secs using 386.4% CPU
Optimizing NNI: done in 0.018456 secs using 400% CPU
Optimizing NNI: done in 0.0205562 secs using 393.6% CPU
Optimizing NNI: done in 0.012084 secs using 388.7% CPU
Optimizing NNI: done in 0.0142438 secs using 399.6% CPU
Optimizing NNI: done in 0.0179341 secs using 370.9% CPU
Optimizing NNI: done in 0.009233 secs using 359.9% CPU
Iteration 300 / LogL: -1358.704 / Time: 0h:0m:5s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -1413.078
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.980
NOTE: UFBoot does not converge, continue at least 100 more iterations
Optimizing NNI: done in 0.0170169 secs using 382.1% CPU
Optimizing NNI: done in 0.00886393 secs using 506.1% CPU
Optimizing NNI: done in 0.012943 secs using 378% CPU
Optimizing NNI: done in 0.0147159 secs using 342.4% CPU
Optimizing NNI: done in 0.017868 secs using 435.8% CPU
Optimizing NNI: done in 0.0141089 secs using 355.2% CPU
Optimizing NNI: done in 0.0221589 secs using 424.9% CPU
Optimizing NNI: done in 0.0135479 secs using 365.7% CPU
Optimizing NNI: done in 0.020438 secs using 400% CPU
Optimizing NNI: done in 0.020479 secs using 393.7% CPU
Iteration 310 / LogL: -1358.705 / Time: 0h:0m:6s (0h:0m:1s left)
Optimizing NNI: done in 0.025888 secs using 354.2% CPU
Optimizing NNI: done in 0.016114 secs using 399.4% CPU
Optimizing NNI: done in 0.0168619 secs using 392.7% CPU
Optimizing NNI: done in 0.019192 secs using 392.9% CPU
Optimizing NNI: done in 0.0251441 secs using 394.7% CPU
Optimizing NNI: done in 0.0181239 secs using 399.3% CPU
Optimizing NNI: done in 0.00916815 secs using 385.8% CPU
Optimizing NNI: done in 0.0193632 secs using 399.2% CPU
Optimizing NNI: done in 0.0124009 secs using 391.9% CPU
Optimizing NNI: done in 0.0132248 secs using 389.8% CPU
Iteration 320 / LogL: -1358.705 / Time: 0h:0m:6s (0h:0m:1s left)
Optimizing NNI: done in 0.021451 secs using 393.2% CPU
Optimizing NNI: done in 0.016109 secs using 391.7% CPU
Optimizing NNI: done in 0.0247829 secs using 394.4% CPU
Optimizing NNI: done in 0.0109959 secs using 388.8% CPU
BETTER TREE FOUND at iteration 324: -1358.703
Optimizing NNI: done in 0.017493 secs using 397.3% CPU
Optimizing NNI: done in 0.0169079 secs using 392% CPU
Optimizing NNI: done in 0.00943089 secs using 385.3% CPU
Optimizing NNI: done in 0.0217309 secs using 399.3% CPU
Optimizing NNI: done in 0.00891995 secs using 385.8% CPU
Optimizing NNI: done in 0.016356 secs using 391.3% CPU
Iteration 330 / LogL: -1358.707 / Time: 0h:0m:6s (0h:0m:1s left)
Optimizing NNI: done in 0.02162 secs using 394.1% CPU
Optimizing NNI: done in 0.0228519 secs using 394% CPU
Optimizing NNI: done in 0.0243261 secs using 394.6% CPU
Optimizing NNI: done in 0.0177169 secs using 392.4% CPU
Optimizing NNI: done in 0.0312378 secs using 395.8% CPU
Optimizing NNI: done in 0.013067 secs using 389% CPU
Optimizing NNI: done in 0.0150928 secs using 391.5% CPU
Optimizing NNI: done in 0.0257339 secs using 394.4% CPU
Optimizing NNI: done in 0.0135431 secs using 390.4% CPU
Optimizing NNI: done in 0.0172219 secs using 392.6% CPU
Iteration 340 / LogL: -1358.705 / Time: 0h:0m:6s (0h:0m:1s left)
Optimizing NNI: done in 0.0139658 secs using 390.5% CPU
Optimizing NNI: done in 0.00892305 secs using 392.3% CPU
Optimizing NNI: done in 0.021306 secs using 394.6% CPU
Optimizing NNI: done in 0.0139802 secs using 390.3% CPU
Optimizing NNI: done in 0.0245249 secs using 394% CPU
Optimizing NNI: done in 0.0137529 secs using 394.1% CPU
Optimizing NNI: done in 0.014086 secs using 392.9% CPU
Optimizing NNI: done in 0.0274119 secs using 395% CPU
Optimizing NNI: done in 0.0135961 secs using 389.7% CPU
Optimizing NNI: done in 0.0182989 secs using 393.5% CPU
Iteration 350 / LogL: -1358.706 / Time: 0h:0m:6s (0h:0m:1s left)
Log-likelihood cutoff on original alignment: -1412.346
Optimizing NNI: done in 0.01667 secs using 400% CPU
Optimizing NNI: done in 0.0129449 secs using 391.3% CPU
Optimizing NNI: done in 0.0170891 secs using 392.6% CPU
Optimizing NNI: done in 0.016139 secs using 399.9% CPU
Optimizing NNI: done in 0.017024 secs using 394.4% CPU
Optimizing NNI: done in 0.0169859 secs using 392.4% CPU
Optimizing NNI: done in 0.0210018 secs using 393.8% CPU
Optimizing NNI: done in 0.0151539 secs using 396.1% CPU
Optimizing NNI: done in 0.0141289 secs using 398.3% CPU
Optimizing NNI: done in 0.0206568 secs using 396.2% CPU
Iteration 360 / LogL: -1358.704 / Time: 0h:0m:7s (0h:0m:1s left)
Optimizing NNI: done in 0.0134931 secs using 395.1% CPU
Optimizing NNI: done in 0.00926304 secs using 385.7% CPU
Optimizing NNI: done in 0.0175738 secs using 396.1% CPU
Optimizing NNI: done in 0.0142121 secs using 399.4% CPU
Optimizing NNI: done in 0.0127649 secs using 399.9% CPU
Optimizing NNI: done in 0.0194061 secs using 393.5% CPU
Optimizing NNI: done in 0.0141029 secs using 390.3% CPU
Optimizing NNI: done in 0.0125561 secs using 389.4% CPU
Optimizing NNI: done in 0.00906897 secs using 386.4% CPU
Optimizing NNI: done in 0.0185308 secs using 350.6% CPU
Iteration 370 / LogL: -1358.706 / Time: 0h:0m:7s (0h:0m:1s left)
Optimizing NNI: done in 0.0138919 secs using 390.5% CPU
Optimizing NNI: done in 0.0155718 secs using 400% CPU
Optimizing NNI: done in 0.015929 secs using 400% CPU
Optimizing NNI: done in 0.00888109 secs using 385.2% CPU
Optimizing NNI: done in 0.0205851 secs using 393.2% CPU
Optimizing NNI: done in 0.0191448 secs using 392.9% CPU
Optimizing NNI: done in 0.017127 secs using 399.9% CPU
Optimizing NNI: done in 0.0258961 secs using 395.1% CPU
Optimizing NNI: done in 0.0225639 secs using 399.9% CPU
Optimizing NNI: done in 0.0158839 secs using 374.8% CPU
Iteration 380 / LogL: -1358.706 / Time: 0h:0m:7s (0h:0m:0s left)
Optimizing NNI: done in 0.019208 secs using 392.5% CPU
Optimizing NNI: done in 0.0154891 secs using 391% CPU
Optimizing NNI: done in 0.019119 secs using 392.9% CPU
Optimizing NNI: done in 0.013844 secs using 398.2% CPU
Optimizing NNI: done in 0.0102348 secs using 386.7% CPU
Optimizing NNI: done in 0.00771904 secs using 381.6% CPU
Optimizing NNI: done in 0.018755 secs using 400.2% CPU
Optimizing NNI: done in 0.012337 secs using 389.4% CPU
Optimizing NNI: done in 0.0228949 secs using 394.3% CPU
Optimizing NNI: done in 0.0131159 secs using 389.9% CPU
Iteration 390 / LogL: -1358.704 / Time: 0h:0m:7s (0h:0m:0s left)
Optimizing NNI: done in 0.0235851 secs using 394.3% CPU
Optimizing NNI: done in 0.017694 secs using 400% CPU
Optimizing NNI: done in 0.0146039 secs using 390.8% CPU
Optimizing NNI: done in 0.011524 secs using 388.5% CPU
Optimizing NNI: done in 0.018193 secs using 399.6% CPU
Optimizing NNI: done in 0.012459 secs using 389.4% CPU
Optimizing NNI: done in 0.0177879 secs using 400% CPU
Optimizing NNI: done in 0.0176091 secs using 394% CPU
Optimizing NNI: done in 0.015615 secs using 397.5% CPU
Optimizing NNI: done in 0.00920391 secs using 385.2% CPU
Iteration 400 / LogL: -1358.704 / Time: 0h:0m:7s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -1411.468
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.987
NOTE: UFBoot does not converge, continue at least 100 more iterations
Optimizing NNI: done in 0.0137122 secs using 390.7% CPU
Optimizing NNI: done in 0.00961804 secs using 327.6% CPU
Optimizing NNI: done in 0.01634 secs using 393.8% CPU
Optimizing NNI: done in 0.0198581 secs using 402.2% CPU
Optimizing NNI: done in 0.0230491 secs using 360.3% CPU
Optimizing NNI: done in 0.00916886 secs using 492.6% CPU
Optimizing NNI: done in 0.009197 secs using 361% CPU
Optimizing NNI: done in 0.0256569 secs using 427.4% CPU
Optimizing NNI: done in 0.0183232 secs using 362% CPU
Optimizing NNI: done in 0.0178671 secs using 435.8% CPU
Iteration 410 / LogL: -1358.705 / Time: 0h:0m:8s (0h:0m:1s left)
Optimizing NNI: done in 0.0135951 secs using 435.4% CPU
Optimizing NNI: done in 0.013334 secs using 390.4% CPU
Optimizing NNI: done in 0.0133061 secs using 389.9% CPU
Optimizing NNI: done in 0.015898 secs using 391.7% CPU
Optimizing NNI: done in 0.00909305 secs using 385.1% CPU
Optimizing NNI: done in 0.012923 secs using 390% CPU
Optimizing NNI: done in 0.018656 secs using 393.1% CPU
Optimizing NNI: done in 0.00931501 secs using 386.4% CPU
Optimizing NNI: done in 0.0215402 secs using 394.8% CPU
Optimizing NNI: done in 0.0202272 secs using 393.5% CPU
Iteration 420 / LogL: -1358.706 / Time: 0h:0m:8s (0h:0m:1s left)
Optimizing NNI: done in 0.0176728 secs using 397.7% CPU
Optimizing NNI: done in 0.017143 secs using 392.5% CPU
Optimizing NNI: done in 0.0238168 secs using 394.6% CPU
Optimizing NNI: done in 0.012929 secs using 390.3% CPU
Optimizing NNI: done in 0.019017 secs using 392.8% CPU
Optimizing NNI: done in 0.0137341 secs using 390.7% CPU
Optimizing NNI: done in 0.0165191 secs using 391.7% CPU
Optimizing NNI: done in 0.021558 secs using 397.3% CPU
Optimizing NNI: done in 0.0256472 secs using 395.7% CPU
Optimizing NNI: done in 0.00812411 secs using 388.3% CPU
Iteration 430 / LogL: -1358.706 / Time: 0h:0m:8s (0h:0m:1s left)
Optimizing NNI: done in 0.0133119 secs using 393.6% CPU
Optimizing NNI: done in 0.0161889 secs using 391.5% CPU
Optimizing NNI: done in 0.0133731 secs using 389.1% CPU
Optimizing NNI: done in 0.0225329 secs using 397.2% CPU
Optimizing NNI: done in 0.0151379 secs using 391.4% CPU
Optimizing NNI: done in 0.0190802 secs using 393.2% CPU
Optimizing NNI: done in 0.015249 secs using 391.4% CPU
Optimizing NNI: done in 0.0172701 secs using 399.3% CPU
Optimizing NNI: done in 0.0136862 secs using 393.1% CPU
Optimizing NNI: done in 0.017261 secs using 392.1% CPU
Iteration 440 / LogL: -1358.706 / Time: 0h:0m:8s (0h:0m:1s left)
Optimizing NNI: done in 0.014652 secs using 377.8% CPU
Optimizing NNI: done in 0.0181081 secs using 393.5% CPU
Optimizing NNI: done in 0.0169561 secs using 400% CPU
Optimizing NNI: done in 0.0187979 secs using 399.9% CPU
Optimizing NNI: done in 0.0366111 secs using 398.1% CPU
Optimizing NNI: done in 0.0194671 secs using 399.4% CPU
Optimizing NNI: done in 0.00927496 secs using 398.4% CPU
Optimizing NNI: done in 0.00922894 secs using 385.9% CPU
UPDATE BEST LOG-LIKELIHOOD: -1358.703
Optimizing NNI: done in 0.0127599 secs using 390.8% CPU
Optimizing NNI: done in 0.0134218 secs using 393.1% CPU
Iteration 450 / LogL: -1358.705 / Time: 0h:0m:9s (0h:0m:1s left)
Log-likelihood cutoff on original alignment: -1411.468
Optimizing NNI: done in 0.0243919 secs using 394.1% CPU
Optimizing NNI: done in 0.0145202 secs using 390.3% CPU
Optimizing NNI: done in 0.0173881 secs using 400.4% CPU
Optimizing NNI: done in 0.0279281 secs using 396.3% CPU
Optimizing NNI: done in 0.0159259 secs using 391.3% CPU
Optimizing NNI: done in 0.017206 secs using 392.7% CPU
Optimizing NNI: done in 0.017642 secs using 392.5% CPU
Optimizing NNI: done in 0.0228441 secs using 394.7% CPU
Optimizing NNI: done in 0.0123599 secs using 389.1% CPU
Optimizing NNI: done in 0.0120399 secs using 389.2% CPU
Iteration 460 / LogL: -1358.703 / Time: 0h:0m:9s (0h:0m:0s left)
Optimizing NNI: done in 0.016516 secs using 392.1% CPU
Optimizing NNI: done in 0.0148821 secs using 399.9% CPU
Optimizing NNI: done in 0.00966907 secs using 386.7% CPU
Optimizing NNI: done in 0.0185459 secs using 373.3% CPU
Optimizing NNI: done in 0.0129509 secs using 389.8% CPU
Optimizing NNI: done in 0.0047121 secs using 375.9% CPU
UPDATE BEST LOG-LIKELIHOOD: -1358.703
Optimizing NNI: done in 0.017452 secs using 393.2% CPU
Optimizing NNI: done in 0.0166159 secs using 392.2% CPU
Optimizing NNI: done in 0.00932097 secs using 385% CPU
Optimizing NNI: done in 0.00917101 secs using 387.4% CPU
Iteration 470 / LogL: -1358.704 / Time: 0h:0m:9s (0h:0m:0s left)
Optimizing NNI: done in 0.0132079 secs using 390.6% CPU
Optimizing NNI: done in 0.017683 secs using 393.1% CPU
Optimizing NNI: done in 0.015727 secs using 391.4% CPU
Optimizing NNI: done in 0.015785 secs using 390.3% CPU
Optimizing NNI: done in 0.0172379 secs using 392.2% CPU
Optimizing NNI: done in 0.035017 secs using 396.1% CPU
Optimizing NNI: done in 0.0181441 secs using 392.8% CPU
Optimizing NNI: done in 0.016587 secs using 399.5% CPU
Optimizing NNI: done in 0.00913596 secs using 386.1% CPU
Optimizing NNI: done in 0.014883 secs using 395.1% CPU
Iteration 480 / LogL: -1358.706 / Time: 0h:0m:9s (0h:0m:0s left)
Optimizing NNI: done in 0.0166378 secs using 392.3% CPU
Optimizing NNI: done in 0.0167189 secs using 392.2% CPU
Optimizing NNI: done in 0.00789404 secs using 384.1% CPU
Optimizing NNI: done in 0.00956511 secs using 386.6% CPU
Optimizing NNI: done in 0.0121 secs using 399.9% CPU
Optimizing NNI: done in 0.0180869 secs using 393.1% CPU
Optimizing NNI: done in 0.00478697 secs using 373.7% CPU
Optimizing NNI: done in 0.0131502 secs using 391% CPU
Optimizing NNI: done in 0.0138431 secs using 390.6% CPU
Optimizing NNI: done in 0.0140679 secs using 391.1% CPU
Iteration 490 / LogL: -1358.705 / Time: 0h:0m:9s (0h:0m:0s left)
Optimizing NNI: done in 0.0134208 secs using 390% CPU
Optimizing NNI: done in 0.0106361 secs using 393.4% CPU
Optimizing NNI: done in 0.015734 secs using 400% CPU
Optimizing NNI: done in 0.018414 secs using 392.4% CPU
Optimizing NNI: done in 0.016943 secs using 399.9% CPU
Optimizing NNI: done in 0.0166759 secs using 391.6% CPU
Optimizing NNI: done in 0.019671 secs using 392.9% CPU
Optimizing NNI: done in 0.0250611 secs using 394.5% CPU
Optimizing NNI: done in 0.0144739 secs using 391% CPU
Optimizing NNI: done in 0.022094 secs using 394.1% CPU
Iteration 500 / LogL: -1358.705 / Time: 0h:0m:10s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -1411.468
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.985
NOTE: UFBoot does not converge, continue at least 100 more iterations
Optimizing NNI: done in 0.0118649 secs using 356.2% CPU
Optimizing NNI: done in 0.0163059 secs using 392% CPU
Optimizing NNI: done in 0.0166769 secs using 392.4% CPU
Optimizing NNI: done in 0.0112031 secs using 400% CPU
Optimizing NNI: done in 0.012624 secs using 389.6% CPU
Optimizing NNI: done in 0.018714 secs using 420.6% CPU
Optimizing NNI: done in 0.014503 secs using 348.2% CPU
Optimizing NNI: done in 0.0171881 secs using 379.3% CPU
Optimizing NNI: done in 0.0190351 secs using 415.2% CPU
Optimizing NNI: done in 0.018683 secs using 421.1% CPU
Iteration 510 / LogL: -1358.706 / Time: 0h:0m:10s (0h:0m:1s left)
Optimizing NNI: done in 0.012908 secs using 379% CPU
Optimizing NNI: done in 0.0128651 secs using 379.9% CPU
Optimizing NNI: done in 0.0084672 secs using 383.4% CPU
Optimizing NNI: done in 0.0110271 secs using 426.5% CPU
Optimizing NNI: done in 0.012603 secs using 480.9% CPU
Optimizing NNI: done in 0.0118079 secs using 399.9% CPU
Optimizing NNI: done in 0.0107808 secs using 387.8% CPU
Optimizing NNI: done in 0.0213821 secs using 394.1% CPU
Optimizing NNI: done in 0.0167341 secs using 392% CPU
Optimizing NNI: done in 0.00886798 secs using 385.6% CPU
Iteration 520 / LogL: -1358.704 / Time: 0h:0m:10s (0h:0m:1s left)
Optimizing NNI: done in 0.0173059 secs using 392.6% CPU
Optimizing NNI: done in 0.0136459 secs using 398.9% CPU
Optimizing NNI: done in 0.0182369 secs using 392.4% CPU
Optimizing NNI: done in 0.0196068 secs using 392.6% CPU
Optimizing NNI: done in 0.0204909 secs using 393.9% CPU
Optimizing NNI: done in 0.017642 secs using 392.3% CPU
Optimizing NNI: done in 0.0168371 secs using 391.9% CPU
Optimizing NNI: done in 0.00918794 secs using 385.2% CPU
Optimizing NNI: done in 0.0136969 secs using 390.1% CPU
Optimizing NNI: done in 0.0270391 secs using 395.1% CPU
Iteration 530 / LogL: -1358.705 / Time: 0h:0m:10s (0h:0m:1s left)
Optimizing NNI: done in 0.019644 secs using 393.5% CPU
Optimizing NNI: done in 0.0164909 secs using 392.4% CPU
Optimizing NNI: done in 0.0150139 secs using 391.7% CPU
Optimizing NNI: done in 0.0178111 secs using 392.8% CPU
Optimizing NNI: done in 0.0193629 secs using 398.6% CPU
Optimizing NNI: done in 0.011996 secs using 389.1% CPU
Optimizing NNI: done in 0.0131052 secs using 389.7% CPU
Optimizing NNI: done in 0.00880599 secs using 385% CPU
Optimizing NNI: done in 0.0091691 secs using 387% CPU
Optimizing NNI: done in 0.0086441 secs using 399.8% CPU
Iteration 540 / LogL: -1366.288 / Time: 0h:0m:10s (0h:0m:1s left)
Optimizing NNI: done in 0.025908 secs using 395% CPU
Optimizing NNI: done in 0.015336 secs using 399.9% CPU
Optimizing NNI: done in 0.0182891 secs using 400% CPU
Optimizing NNI: done in 0.0187812 secs using 400% CPU
Optimizing NNI: done in 0.00547481 secs using 400% CPU
Optimizing NNI: done in 0.013782 secs using 395.2% CPU
Optimizing NNI: done in 0.0182168 secs using 391% CPU
Optimizing NNI: done in 0.013334 secs using 390.1% CPU
Optimizing NNI: done in 0.021796 secs using 399.8% CPU
Optimizing NNI: done in 0.0124428 secs using 388.7% CPU
Iteration 550 / LogL: -1358.704 / Time: 0h:0m:11s (0h:0m:1s left)
Log-likelihood cutoff on original alignment: -1411.468
Optimizing NNI: done in 0.0140841 secs using 390% CPU
Optimizing NNI: done in 0.0119779 secs using 397.7% CPU
Optimizing NNI: done in 0.0162051 secs using 392.5% CPU
Optimizing NNI: done in 0.0156589 secs using 390.2% CPU
Optimizing NNI: done in 0.020294 secs using 393.9% CPU
Optimizing NNI: done in 0.0198839 secs using 399.9% CPU
Optimizing NNI: done in 0.011234 secs using 399.9% CPU
Optimizing NNI: done in 0.019563 secs using 393.4% CPU
Optimizing NNI: done in 0.0183201 secs using 392.8% CPU
Optimizing NNI: done in 0.0134449 secs using 390.4% CPU
Iteration 560 / LogL: -1358.705 / Time: 0h:0m:11s (0h:0m:0s left)
Optimizing NNI: done in 0.0118949 secs using 389.3% CPU
Optimizing NNI: done in 0.0122581 secs using 389.4% CPU
Optimizing NNI: done in 0.012923 secs using 390% CPU
Optimizing NNI: done in 0.0165901 secs using 392.2% CPU
Optimizing NNI: done in 0.017765 secs using 392.9% CPU
Optimizing NNI: done in 0.0158441 secs using 392.1% CPU
Optimizing NNI: done in 0.012084 secs using 389.3% CPU
Optimizing NNI: done in 0.0208521 secs using 399.7% CPU
Optimizing NNI: done in 0.01178 secs using 395.5% CPU
Optimizing NNI: done in 0.0166972 secs using 391.6% CPU
Iteration 570 / LogL: -1358.707 / Time: 0h:0m:11s (0h:0m:0s left)
Optimizing NNI: done in 0.0128071 secs using 394.1% CPU
Optimizing NNI: done in 0.0129251 secs using 399.9% CPU
Optimizing NNI: done in 0.0183699 secs using 393% CPU
Optimizing NNI: done in 0.0179398 secs using 399.9% CPU
Optimizing NNI: done in 0.0176642 secs using 394.4% CPU
Optimizing NNI: done in 0.012064 secs using 389.1% CPU
Optimizing NNI: done in 0.0157781 secs using 392.3% CPU
Optimizing NNI: done in 0.014405 secs using 391.4% CPU
Optimizing NNI: done in 0.0246191 secs using 395.3% CPU
Optimizing NNI: done in 0.0178621 secs using 393.1% CPU
Iteration 580 / LogL: -1358.705 / Time: 0h:0m:11s (0h:0m:0s left)
Optimizing NNI: done in 0.0128989 secs using 390.1% CPU
Optimizing NNI: done in 0.0171881 secs using 373.8% CPU
Optimizing NNI: done in 0.00980902 secs using 398.4% CPU
Optimizing NNI: done in 0.0183711 secs using 399.1% CPU
Optimizing NNI: done in 0.0171371 secs using 396.7% CPU
Optimizing NNI: done in 0.0126691 secs using 397.5% CPU
Optimizing NNI: done in 0.0166728 secs using 392.8% CPU
Optimizing NNI: done in 0.0155091 secs using 399.1% CPU
Optimizing NNI: done in 0.017998 secs using 392.3% CPU
Optimizing NNI: done in 0.023366 secs using 394.4% CPU
Iteration 590 / LogL: -1358.706 / Time: 0h:0m:11s (0h:0m:0s left)
Optimizing NNI: done in 0.00959206 secs using 385.7% CPU
Optimizing NNI: done in 0.0167551 secs using 399.6% CPU
Optimizing NNI: done in 0.0175681 secs using 392.3% CPU
Optimizing NNI: done in 0.0136092 secs using 398.5% CPU
Optimizing NNI: done in 0.0138822 secs using 396.8% CPU
Optimizing NNI: done in 0.0131352 secs using 390.5% CPU
Optimizing NNI: done in 0.0213971 secs using 393.9% CPU
Optimizing NNI: done in 0.013062 secs using 392.5% CPU
Optimizing NNI: done in 0.014384 secs using 399.9% CPU
Optimizing NNI: done in 0.0170062 secs using 392.2% CPU
Iteration 600 / LogL: -1392.793 / Time: 0h:0m:12s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -1411.468
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.989
NOTE: UFBoot does not converge, continue at least 100 more iterations
Optimizing NNI: done in 0.00906014 secs using 386.3% CPU
Optimizing NNI: done in 0.0193369 secs using 395.8% CPU
Optimizing NNI: done in 0.020046 secs using 399.3% CPU
Optimizing NNI: done in 0.0173059 secs using 398.5% CPU
Optimizing NNI: done in 0.0112581 secs using 395.3% CPU
Optimizing NNI: done in 0.0138669 secs using 390.6% CPU
Optimizing NNI: done in 0.0133531 secs using 394.2% CPU
Optimizing NNI: done in 0.0241201 secs using 385.4% CPU
Optimizing NNI: done in 0.0195799 secs using 406.4% CPU
Optimizing NNI: done in 0.01986 secs using 341.7% CPU
Iteration 610 / LogL: -1358.706 / Time: 0h:0m:12s (0h:0m:1s left)
Optimizing NNI: done in 0.016541 secs using 390.2% CPU
Optimizing NNI: done in 0.0132601 secs using 462% CPU
Optimizing NNI: done in 0.0203681 secs using 394.5% CPU
Optimizing NNI: done in 0.0135601 secs using 365.5% CPU
Optimizing NNI: done in 0.0159659 secs using 400.6% CPU
Optimizing NNI: done in 0.0161028 secs using 398.1% CPU
Optimizing NNI: done in 0.0199571 secs using 399.9% CPU
Optimizing NNI: done in 0.0212672 secs using 399.6% CPU
Optimizing NNI: done in 0.00938296 secs using 386.4% CPU
Optimizing NNI: done in 0.0210509 secs using 399.9% CPU
Iteration 620 / LogL: -1358.706 / Time: 0h:0m:12s (0h:0m:1s left)
Optimizing NNI: done in 0.0155261 secs using 400% CPU
Optimizing NNI: done in 0.0131571 secs using 390.2% CPU
Optimizing NNI: done in 0.0261519 secs using 396.4% CPU
Optimizing NNI: done in 0.0167391 secs using 392.8% CPU
Optimizing NNI: done in 0.0132971 secs using 398.3% CPU
Optimizing NNI: done in 0.015568 secs using 391.7% CPU
Optimizing NNI: done in 0.0167551 secs using 396.1% CPU
Optimizing NNI: done in 0.0135481 secs using 390.3% CPU
Optimizing NNI: done in 0.0184541 secs using 393.1% CPU
Optimizing NNI: done in 0.0273318 secs using 395.5% CPU
Iteration 630 / LogL: -1358.707 / Time: 0h:0m:12s (0h:0m:1s left)
Optimizing NNI: done in 0.018393 secs using 392.9% CPU
UPDATE BEST LOG-LIKELIHOOD: -1358.703
Optimizing NNI: done in 0.00931716 secs using 380.8% CPU
Optimizing NNI: done in 0.0159562 secs using 392.1% CPU
Optimizing NNI: done in 0.00851798 secs using 385.1% CPU
Optimizing NNI: done in 0.013705 secs using 389.7% CPU
Optimizing NNI: done in 0.0165949 secs using 392.7% CPU
Optimizing NNI: done in 0.0186601 secs using 393.2% CPU
Optimizing NNI: done in 0.013907 secs using 390.7% CPU
Optimizing NNI: done in 0.01285 secs using 397% CPU
Optimizing NNI: done in 0.0115049 secs using 400% CPU
Iteration 640 / LogL: -1358.705 / Time: 0h:0m:13s (0h:0m:1s left)
Optimizing NNI: done in 0.0153129 secs using 393.2% CPU
Optimizing NNI: done in 0.0170012 secs using 392.8% CPU
Optimizing NNI: done in 0.012903 secs using 390% CPU
Optimizing NNI: done in 0.0159891 secs using 399.7% CPU
Optimizing NNI: done in 0.0148768 secs using 390.9% CPU
Optimizing NNI: done in 0.013509 secs using 391.9% CPU
Optimizing NNI: done in 0.0130169 secs using 390.1% CPU
Optimizing NNI: done in 0.017242 secs using 392.8% CPU
Optimizing NNI: done in 0.0191879 secs using 393.1% CPU
Optimizing NNI: done in 0.00564098 secs using 400.1% CPU
Iteration 650 / LogL: -1362.927 / Time: 0h:0m:13s (0h:0m:1s left)
Log-likelihood cutoff on original alignment: -1411.468
Optimizing NNI: done in 0.008461 secs using 385.2% CPU
Optimizing NNI: done in 0.0197251 secs using 400% CPU
Optimizing NNI: done in 0.0175979 secs using 397.1% CPU
Optimizing NNI: done in 0.021831 secs using 399.8% CPU
Optimizing NNI: done in 0.0231361 secs using 400% CPU
Optimizing NNI: done in 0.0166891 secs using 392.4% CPU
Optimizing NNI: done in 0.018574 secs using 398.2% CPU
Optimizing NNI: done in 0.0197451 secs using 393.4% CPU
Optimizing NNI: done in 0.011754 secs using 389.7% CPU
Optimizing NNI: done in 0.0163682 secs using 391.5% CPU
Iteration 660 / LogL: -1358.705 / Time: 0h:0m:13s (0h:0m:0s left)
Optimizing NNI: done in 0.0103951 secs using 399.9% CPU
Optimizing NNI: done in 0.0090301 secs using 386% CPU
Optimizing NNI: done in 0.0155981 secs using 391.7% CPU
Optimizing NNI: done in 0.0204711 secs using 393.7% CPU
Optimizing NNI: done in 0.00909996 secs using 386.1% CPU
Optimizing NNI: done in 0.011982 secs using 387.5% CPU
Optimizing NNI: done in 0.0160029 secs using 392.2% CPU
Optimizing NNI: done in 0.0110981 secs using 388.9% CPU
Optimizing NNI: done in 0.021307 secs using 393.9% CPU
Optimizing NNI: done in 0.0076139 secs using 383.9% CPU
Iteration 670 / LogL: -1362.868 / Time: 0h:0m:13s (0h:0m:0s left)
Optimizing NNI: done in 0.0165491 secs using 392.9% CPU
Optimizing NNI: done in 0.0136991 secs using 390.6% CPU
Optimizing NNI: done in 0.0150971 secs using 399.9% CPU
Optimizing NNI: done in 0.0134799 secs using 390.8% CPU
Optimizing NNI: done in 0.0198522 secs using 393.4% CPU
Optimizing NNI: done in 0.0162299 secs using 391.9% CPU
Optimizing NNI: done in 0.022774 secs using 394.6% CPU
Optimizing NNI: done in 0.013351 secs using 390.7% CPU
Optimizing NNI: done in 0.0181379 secs using 392.8% CPU
Optimizing NNI: done in 0.013329 secs using 390.5% CPU
Iteration 680 / LogL: -1358.706 / Time: 0h:0m:13s (0h:0m:0s left)
Optimizing NNI: done in 0.0162652 secs using 392.4% CPU
Optimizing NNI: done in 0.0173512 secs using 392% CPU
Optimizing NNI: done in 0.00938201 secs using 397.3% CPU
Optimizing NNI: done in 0.0109971 secs using 382.1% CPU
Optimizing NNI: done in 0.0136011 secs using 390.4% CPU
Optimizing NNI: done in 0.020694 secs using 393.5% CPU
Optimizing NNI: done in 0.0130391 secs using 390.2% CPU
Optimizing NNI: done in 0.016969 secs using 391.9% CPU
Optimizing NNI: done in 0.0163229 secs using 392.1% CPU
Optimizing NNI: done in 0.01912 secs using 393.5% CPU
Iteration 690 / LogL: -1358.705 / Time: 0h:0m:14s (0h:0m:0s left)
Optimizing NNI: done in 0.00852394 secs using 385.4% CPU
Optimizing NNI: done in 0.0147648 secs using 391% CPU
Optimizing NNI: done in 0.00955009 secs using 390.3% CPU
Optimizing NNI: done in 0.018048 secs using 393.1% CPU
Optimizing NNI: done in 0.0187712 secs using 393.2% CPU
Optimizing NNI: done in 0.0193961 secs using 332.2% CPU
Optimizing NNI: done in 0.0207191 secs using 393.8% CPU
Optimizing NNI: done in 0.0162539 secs using 391.9% CPU
Optimizing NNI: done in 0.017765 secs using 395.2% CPU
Optimizing NNI: done in 0.0191429 secs using 393.2% CPU
Iteration 700 / LogL: -1358.705 / Time: 0h:0m:14s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -1411.468
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 0.991
TREE SEARCH COMPLETED AFTER 700 ITERATIONS / Time: 0h:0m:14s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -1358.703
Optimal log-likelihood: -1358.703
Parameters optimization took 1 rounds (0.002 sec)
BEST SCORE FOUND : -1358.703
Creating bootstrap support values...
Split supports printed to NEXUS file iqtree_species/OG0000046.fa.splits.nex
Total tree length: 0.155

Total number of iterations: 700
CPU time used for tree search: 57.077 sec (0h:0m:57s)
Wall-clock time used for tree search: 14.414 sec (0h:0m:14s)
Total CPU time used: 57.292 sec (0h:0m:57s)
Total wall-clock time used: 14.471 sec (0h:0m:14s)

Computing bootstrap consensus tree...
Reading input file iqtree_species/OG0000046.fa.splits.nex...
23 taxa and 217 splits.
Consensus tree written to iqtree_species/OG0000046.fa.contree
Reading input trees file iqtree_species/OG0000046.fa.contree
Log-likelihood of consensus tree: -1358.716

Analysis results written to: 
  IQ-TREE report:                iqtree_species/OG0000046.fa.iqtree
  Maximum-likelihood tree:       iqtree_species/OG0000046.fa.treefile
  Likelihood distances:          iqtree_species/OG0000046.fa.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          iqtree_species/OG0000046.fa.splits.nex
  Consensus tree:                iqtree_species/OG0000046.fa.contree
  Screen log file:               iqtree_species/OG0000046.fa.log

Date and Time: Thu Apr  3 12:58:47 2025
